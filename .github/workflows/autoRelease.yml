name: Release

on:
  push:
    branches:
      - main

jobs:

  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
        
    - name: Install dependencies
      run: npm i
        
    - name: Build project
      run: npm run build
        
    - name: Bump version and create release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
        version=$(node -p "require('./package.json').version")
        
        latest_release=$(gh release list --limit 1 --json tagName --jq '.[0].tag_name')
        
        if [ -z "$latest_release" ]; then
          major=$(echo $version | cut -d. -f1)
          minor=$(echo $version | cut -d. -f2)
          patch=$(echo $version | cut -d. -f3)
          new_version="$major.$minor.$((patch + 1))"
        else
          new_version=$(node -e "console.log('$version'.split('.').map((v,i) => i===2?parseFloat(v)+0.1:parseInt(v)).join('.'))")
        fi
        
        npm version $new_version --no-git-tag-version
        
        git add package.json
        git commit -m "Bump version to $new_version"
        
        zip -r assets.zip dist/
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: assets.zip
        asset_name: Harmony-core assets - v$new_version
        asset_content_type: application/zip
