name: Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      new-version: ${{ steps.bump_version.outputs.new_version }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        run: npm i
      - name: Build project
        run: npm run build
      - name: Bump version
        id: bump_version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          . ./.github/scripts/bump_version.sh
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          npm version $new_version --no-git-tag-version
      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            .git/
            dist/
            public/
            src/
            types/
            package.json
            package-lock.json
            tsconfig.json
            vite.config.ts
            vite.config.page.ts
  publish-npm:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

  publish-gpr:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: "https://npm.pkg.github.com"
      - run: npm ci
      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  publish-github-release:
    needs: [build, publish-npm, publish-gpr]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build
      - name: publish github release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEW_VERSION: ${{ needs.build.outputs.new-version }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          gh release create V$NEW_VERSION --generate-notes
  publish-github:
    needs: [build, publish-npm, publish-gpr, publish-github-release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: build
      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
      - name: Release all the changes to GitHub repo
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEW_VERSION: ${{ needs.build.outputs.new-version }}
        run: |
          git add package.json
          git add dist/*
          git commit -m "Bump version to $NEW_VERSION"
          git push origin main
